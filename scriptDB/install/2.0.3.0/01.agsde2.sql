--liquibase formatted sql
--changeset rdestasio:2.0.3.0_20200221_01

-- caratteristica soggetti certificati:
update caratteristiche_tipologie set layout_soggetti = '/atti/documenti/certificato.zul' where TIPO_OGGETTO = 'CERTIFICATO'
/

-- creo la tabella per il mapping dei valori delle varie integrazioni.
CREATE TABLE MAPPING_INTEGRAZIONI (ID_MAPPING_INTEGRAZIONE NUMBER(19) NOT NULL, CATEGORIA VARCHAR2(255 BYTE) NOT NULL, CODICE VARCHAR2(255 BYTE) NOT NULL, VALORE_ESTERNO VARCHAR2(255 BYTE) NOT NULL, VALORE_INTERNO VARCHAR2(255 BYTE) NOT NULL, ENTE VARCHAR2(255 BYTE) NOT NULL ) LOGGING NOCOMPRESS NOCACHE NOPARALLEL MONITORING
/

CREATE UNIQUE INDEX CODICI_INTEGRAZIONI_PK ON MAPPING_INTEGRAZIONI (ID_MAPPING_INTEGRAZIONE) LOGGING NOPARALLEL
/

ALTER TABLE MAPPING_INTEGRAZIONI ADD (CONSTRAINT CODICI_INTEGRAZIONI_PK PRIMARY KEY (ID_MAPPING_INTEGRAZIONE) USING INDEX CODICI_INTEGRAZIONI_PK ENABLE VALIDATE)
/

-- aggiungo la colonna codice_esterno a tipi_determina e tipi_delibera
ALTER TABLE TIPI_DETERMINA ADD (CODICE_ESTERNO VARCHAR2(255 BYTE))
/

ALTER TABLE TIPI_DELIBERA ADD (CODICE_ESTERNO VARCHAR2(255 BYTE))
/

-- aggiungo gli allegati ai visti
ALTER TABLE ALLEGATI ADD (ID_VISTO_PARERE NUMBER(19))
/

ALTER TABLE ALLEGATI ADD CONSTRAINT ALL_VISPAR_FK FOREIGN KEY (ID_VISTO_PARERE) REFERENCES VISTI_PARERI (ID_VISTO_PARERE) ENABLE VALIDATE
/

CREATE INDEX ALL_VISPAR_FK ON ALLEGATI (ID_VISTO_PARERE) LOGGING NOPARALLEL
/

CREATE INDEX VISPAR_DEL_FK ON VISTI_PARERI (ID_DELIBERA) LOGGING NOPARALLEL
/

-- GESTIONE CORTE DEI CONTI
ALTER TABLE DETERMINE ADD (DA_INVIARE_CORTE_CONTI CHAR(1 BYTE) DEFAULT 'N' NOT NULL)
/

ALTER TABLE DELIBERE ADD (DA_INVIARE_CORTE_CONTI CHAR(1 BYTE) DEFAULT 'N' NOT NULL)
/

ALTER TABLE PROPOSTE_DELIBERA ADD (DA_INVIARE_CORTE_CONTI CHAR(1 BYTE) DEFAULT 'N' NOT NULL)
/

ALTER TABLE DETERMINE ADD (DATA_INVIO_CORTE_CONTI date)
/

ALTER TABLE DELIBERE ADD (DATA_INVIO_CORTE_CONTI date)
/

-- refactor notifiche:
ALTER TABLE NOTIFICHE ADD (MODALITA_INVIO VARCHAR2(255 BYTE) default 'JWORKLIST' not null)
/

ALTER TABLE NOTIFICHE ADD (ALLEGATI VARCHAR2(255 BYTE))
/

ALTER TABLE NOTIFICHE_EMAIL ADD (UNITA_OTTICA VARCHAR2(255 BYTE))
/

ALTER TABLE NOTIFICHE_EMAIL ADD (UNITA_PROGR NUMBER(19))
/

ALTER TABLE NOTIFICHE_EMAIL ADD (UNITA_DAL DATE)
/

ALTER TABLE NOTIFICHE_EMAIL ADD (RUOLO VARCHAR2(255 BYTE))
/

ALTER TABLE NOTIFICHE_EMAIL ADD (FUNZIONE VARCHAR2(255 BYTE))
/

ALTER TABLE NOTIFICHE_EMAIL ADD (ID_SOGGETTO NUMBER(19))
/

ALTER TABLE NOTIFICHE_EMAIL MODIFY(ID_EMAIL NULL)
/

ALTER TABLE NOTIFICHE ADD (OGGETTI VARCHAR(255 BYTE) NULL)
/

-- elimino la tabella tipi_notifiche
drop table tipi_notifica cascade constraints
/

-- Inserisco la notifica di ASSEGNAZIONE (quella di cambio step)
declare
    d_count number;
begin
    select count(1) into d_count from notifiche;
    if (d_count > 0) then
    insert into notifiche
       (id_notifica, version, id_commissione, data_ins, ente, 
        data_upd, oggetto, id_organo_controllo, testo, tipo_notifica, 
        titolo, utente_ins, utente_upd, valido, valido_al, 
        valido_dal, modalita_invio, allegati, oggetti)
     values
         (hibernate_sequence.nextval, 0, null, sysdate
       , (select ente from notifiche n where rownum = 1)
       , sysdate, '[TIPOLOGIA] [ESTREMI_DOCUMENTO] - [STATO]', null, '[OGGETTO]', 'ASSEGNAZIONE', 'Notifica di Cambio Step'
       , (select utente_ins from notifiche n where rownum = 1)
       , (select utente_ins from notifiche n where rownum = 1)
       , 'Y', null, sysdate, 'JWORKLIST', null, 'DETERMINA#DELIBERA#PROPOSTA_DELIBERA#VISTO_PARERE#CERTIFICATO');
    end if;
end;
/

-- Rinomino e aggiorno le notifiche con i campi di default:
update notifiche
   set tipo_notifica  	= 'ADOZIONE_ATTO'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= ''
	 , oggetti  		= 'DELIBERA'
 where tipo_notifica 	= 'ADOZIONE_ATTO'
/

update notifiche
   set tipo_notifica  	= 'ESECUTIVITA_ATTO'
     , modalita_invio 	= 'JWORKLIST'
	 , allegati 		= 'STAMPA_UNICA'
	 , oggetti  		= 'DETERMINA#DELIBERA'
 where tipo_notifica 	= 'ESECUTIVITA_ATTO'
/

update notifiche
   set tipo_notifica  	= 'NON_ESECUTIVITA_ATTO'
     , modalita_invio 	= 'JWORKLIST'
	 , allegati 		= ''
	 , oggetti  		= 'DETERMINA'
 where tipo_notifica 	= 'NON_ESECUTIVITA_ATTO'
/

update notifiche
   set tipo_notifica  	= 'NOTIFICA_DA_FIRMARE'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= 'TESTO'
	 , oggetti  		= 'DETERMINA#DELIBERA#PROPOSTA_DELIBERA#VISTO_PARERE#CERTIFICATO'
 where tipo_notifica 	= 'NOTIFICA_DA_FIRMARE'
/

update notifiche
   set tipo_notifica  	= 'CONVOCAZIONE_SEDUTA'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= 'STAMPA_CONVOCAZIONE'
	 , oggetti  		= 'SEDUTA'
 where tipo_notifica 	= 'CONVOCAZIONE_SEDUTA'
/

update notifiche
   set tipo_notifica  	= 'DELIBERA_SEGRETARIO'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= ''
	 , oggetti  		= 'PROPOSTA_DELIBERA'
 where tipo_notifica 	= 'DELIBERA_SEGRETARIO'
/

update notifiche
   set tipo_notifica  	= 'NOTIFICHE_ODG'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= ''
	 , oggetti  		= 'SEDUTA'
 where tipo_notifica 	= 'NOTIFICHE_ODG'
/

update notifiche
   set tipo_notifica  	= 'VERBALIZZAZIONE_PROPOSTA'
     , modalita_invio 	= 'JWORKLIST'
	 , allegati 		= 'TESTO'
	 , oggetti  		= 'PROPOSTA_DELIBERA'
 where tipo_notifica 	= 'VERBALIZZAZIONE_PROPOSTA'
/

update notifiche
   set tipo_notifica  	= 'NOTIFICA_ORGANI_CONTROLLO'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= 'TESTO'
	 , oggetti  		= 'ORGANI_DI_CONTROLLO'
 where tipo_notifica 	= 'NOTIFICA_ORGANI_CONTROLLO'
/

update notifiche
   set tipo_notifica  	= 'GENERICA_1'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= ''
	 , oggetti  		= 'DETERMINA#DELIBERA#PROPOSTA_DELIBERA#VISTO_PARERE#CERTIFICATO'
 where tipo_notifica 	= 'NOTIFICA_ATTO'
/

update notifiche
   set tipo_notifica  	= 'GENERICA_2'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= ''
	 , oggetti  		= 'DETERMINA#DELIBERA#PROPOSTA_DELIBERA#VISTO_PARERE#CERTIFICATO'
 where tipo_notifica 	= 'RELATORE_PROPOSTA'
/

update notifiche
   set tipo_notifica  	= 'GENERICA_3'
     , modalita_invio 	= 'EMAIL'
	 , allegati 		= ''
	 , oggetti  		= 'DETERMINA#DELIBERA#PROPOSTA_DELIBERA#VISTO_PARERE#CERTIFICATO'
 where tipo_notifica 	= 'UTENTI_CON_RUOLO'
/


-- per ogni notifica presente, creo i relativi destinatari di default:
begin
	for tn in ( select 'ASSEGNAZIONE'  				tipo_notifica, 'ATTORI_STEP_CORRENTE' 	nome_funzione from dual union
				select 'ADOZIONE_ATTO' 				tipo_notifica, 'ATTORI_FLUSSO_TRANNE_STEP_CORRENTE' nome_funzione from dual union
				select 'ESECUTIVITA_ATTO' 			tipo_notifica, 'INTERNI' 				nome_funzione from dual union
				select 'ESECUTIVITA_ATTO' 			tipo_notifica, 'ESTERNI' 				nome_funzione from dual union
				select 'ESECUTIVITA_ATTO' 			tipo_notifica, 'ATTORI_FLUSSO_TRANNE_STEP_CORRENTE' nome_funzione from dual union
				select 'NON_ESECUTIVITA_ATTO' 		tipo_notifica, 'DIRIGENTE' 				nome_funzione from dual union
				select 'NON_ESECUTIVITA_ATTO' 		tipo_notifica, 'ATTORI_FLUSSO' 			nome_funzione from dual union
				select 'NOTIFICA_DA_FIRMARE' 		tipo_notifica, 'ATTORI_STEP_CORRENTE' 	nome_funzione from dual union
				select 'CONVOCAZIONE_SEDUTA'		tipo_notifica, 'CONVOCATI_SEDUTA' 	nome_funzione from dual union
				select 'DELIBERA_SEGRETARIO' 		tipo_notifica, 'SEGRETARIO' 		nome_funzione from dual union
				select 'VERBALIZZAZIONE_PROPOSTA' 	tipo_notifica, 'ATTORI_FLUSSO_TRANNE_STEP_CORRENTE' nome_funzione from dual union
				select 'VERBALIZZAZIONE_PROPOSTA' 	tipo_notifica, 'ATTORI_VISTI' 		nome_funzione from dual union
				select 'VERBALIZZAZIONE_PROPOSTA' 	tipo_notifica, 'UTENTI_VERBALIZZAZIONE_IN_UO_PROPONENTE' nome_funzione from dual union
				select 'NOTIFICA_ORGANI_CONTROLLO' 	tipo_notifica, 'ORGANI_CONTROLLO' 	nome_funzione from dual union
				select 'GENERICA_1' 				tipo_notifica, 'INTERNI' 			nome_funzione from dual union
				select 'GENERICA_1' 				tipo_notifica, 'ESTERNI' 			nome_funzione from dual union
				select 'GENERICA_2' 				tipo_notifica, 'RELATORE_PROPOSTA' 	nome_funzione from dual)
	loop
		for n in (select id_notifica, utente_ins from notifiche where tipo_notifica = tn.tipo_notifica and valido = 'Y')
		loop
			insert into notifiche_email
			   (id_notifica_email, version, data_ins, id_email, data_upd, 
				id_notifica, utente_ins, utente_upd, valido, valido_al, 
				valido_dal, unita_ottica, unita_progr, unita_dal, ruolo, 
				funzione, id_soggetto)
			 values
			   (hibernate_sequence.nextval, 0, sysdate, null, sysdate, (n.id_notifica), n.utente_ins, n.utente_ins, 'Y', null, sysdate, 
			   null, 	-- uo ottica
			   null, 	-- uo progr
			   null, 	-- uo dal
			   null, 	-- ruolo
			   tn.nome_funzione, 		-- nome funzione
			   null);
		end loop;
	end loop;
end;
/

-- aggiungo le costraint:
ALTER TABLE NOTIFICHE MODIFY (OGGETTI NOT NULL)
/

-- rinomino alcune azioni:
update wkf_diz_azioni set nome_bean = 'notificheAction', nome_metodo = 'notificaGenerica1' where nome_bean = 'notificheAction' and nome_metodo = 'notificaAtto'
/

update wkf_diz_azioni set nome_bean = 'notificheAction', nome_metodo = 'notificaGenerica2' where nome_bean = 'notificheAction' and nome_metodo = 'notificaRelatore'
/

update wkf_diz_azioni set nome_bean = 'notificheAction', nome_metodo = 'notificaGenerica3' where nome_bean = 'notificheAction' and nome_metodo = 'notificaRuolo'
/

-- elimino le azioni non pi√π usate:
begin 
for c in (select * from (
select distinct 
         a.id_azione as id_azione
       , a.nome_bean
       , nvl(a.nome_metodo, a.nome_metodo_client) nome_metodo
       , pa.id_pulsante
       , sai.id_cfg_step step_azione_in
       , sao.id_cfg_step step_azione_out
       , s.id_cfg_step step_condizione
  from wkf_diz_azioni a
     , wkf_diz_pulsanti_azioni pa
     , wkf_cfg_step_azioni_in sai
     , wkf_cfg_step_azioni_out sao
     , wkf_cfg_step s
     , wkf_diz_pulsanti p
     , wkf_diz_attori att
 where pa.id_azione(+) = a.id_azione
   and sai.id_azione_in(+) = a.id_azione
   and sao.id_azione_out(+) = a.id_azione
   and s.id_azione_condizione(+) = a.id_azione
   and p.id_condizione_visibilita(+) = a.id_azione
   and att.id_azione_calcolo(+) = a.id_azione) az
 where (az.nome_metodo = 'notificaNonEsecutivita'
   and az.nome_bean    = 'notificheAction') 
    or (az.nome_metodo = 'notificaEsecutivita'
   and az.nome_bean    = 'notificheAction')) loop
   
   
   delete from wkf_diz_pulsanti_azioni pa where PA.ID_PULSANTE = c.id_pulsante and pa.id_azione = c.id_azione;
   for c1 in (select p.id_pulsante, p.id_azione, p.azioni_idx+1 sequenza, row_number() over (partition by p.id_pulsante order by p.id_pulsante, p.azioni_idx asc) sequenza_nuova
      from wkf_diz_pulsanti_azioni p
     where p.id_pulsante = c.id_pulsante
     order by p.id_pulsante asc, p.azioni_idx asc)
    loop
        update wkf_diz_pulsanti_azioni p set p.azioni_idx = (c1.sequenza_nuova - 1) where p.id_pulsante = c1.id_pulsante and p.id_azione = c1.id_azione;
    end loop;
   
   delete from wkf_cfg_step_azioni_in i where i.id_cfg_step = c.step_azione_in and i.id_azione_in = c.id_azione;
   for c1 in (select P.ID_CFG_STEP , P.ID_AZIONE_IN , p.AZIONI_INGRESSO_IDX+1 sequenza, row_number() over (partition by p.ID_CFG_STEP order by p.ID_CFG_STEP, p.AZIONI_INGRESSO_IDX asc) sequenza_nuova
      from wkf_cfg_step_azioni_in p
     where p.id_cfg_step = c.step_azione_in
     order by p.id_cfg_step asc, p.AZIONI_INGRESSO_IDX asc)
    loop
        update wkf_cfg_step_azioni_in p set P.AZIONI_INGRESSO_IDX = (c1.sequenza_nuova - 1) where p.id_cfg_step = c1.id_cfg_step and p.ID_AZIONE_IN = c1.ID_AZIONE_IN;
    end loop;
   
   delete from wkf_cfg_step_azioni_out i where i.id_cfg_step = c.step_azione_out and I.ID_AZIONE_OUT = c.id_azione;
   for c1 in (select P.ID_CFG_STEP , P.ID_AZIONE_OUT , p.AZIONI_USCITA_IDX+1 sequenza, row_number() over (partition by p.ID_CFG_STEP order by p.ID_CFG_STEP, p.AZIONI_USCITA_IDX asc) sequenza_nuova
      from wkf_cfg_step_azioni_out p
     where p.id_cfg_step = c.step_azione_out
     order by p.id_cfg_step asc, p.AZIONI_USCITA_IDX asc)
    loop
        update wkf_cfg_step_azioni_out p set P.AZIONI_USCITA_IDX = (c1.sequenza_nuova - 1) where p.id_cfg_step = c1.id_cfg_step and p.ID_AZIONE_OUT = c1.ID_AZIONE_OUT;
    end loop;
   
end loop;

end;
/

-- acquisizioni delibere
CREATE TABLE AG_ACQUISIZIONE_ALLEGATI ( APPLICATIVO_ESTERNO VARCHAR2(255 BYTE), ID_DOC_ESTERNO NUMBER(19), APPLICATIVO_ESTERNO_ALLEGATO VARCHAR2(255 BYTE), ID_DOC_ALLEGATO NUMBER(19), DESCRIZIONE VARCHAR2(1000 BYTE), TIPO_DOCUMENTO VARCHAR2(255 BYTE), FILE_DOCUMENTO BLOB, NOMEFILE VARCHAR2(255 BYTE) ) LOGGING NOCOMPRESS NOCACHE NOPARALLEL MONITORING
/

CREATE TABLE AG_ACQUISIZIONE_DETERMINE ( APPLICATIVO_ESTERNO VARCHAR2(255 BYTE), ID_DOC_ESTERNO NUMBER(19), TIPO_REGISTRO VARCHAR2(255 BYTE) DEFAULT 'PAR', MOVIMENTO VARCHAR2(255 BYTE) DEFAULT 'PAR', TIPOLOGIA VARCHAR2(255 BYTE), CODICE_MODELLO VARCHAR2(255 BYTE), OGGETTO VARCHAR2(1000 BYTE) NOT NULL, CLASSIFICAZIONE VARCHAR2(255 BYTE), ANNO_CLA NUMBER(19), NUMERO_CLA VARCHAR2(255 BYTE), UNITA_ESIBENTE VARCHAR2(255 BYTE), UNITA_PROTOCOLLANTE VARCHAR2(255 BYTE), UTENTE_PROTOCOLLANTE VARCHAR2(255 BYTE), NOTE VARCHAR2(255 BYTE), IMPEGNO CHAR(1 BYTE), APRI_REGISTRO CHAR(1 BYTE) DEFAULT 'N', UTENTE_DIRIGENTE VARCHAR2(255 BYTE) NOT NULL, FILE_DOCUMENTO BLOB, STATO_ACQUISIZIONE VARCHAR2(255 BYTE) DEFAULT 'ELABORARE' NOT NULL, NOMEFILE VARCHAR2(255 BYTE), DOCUMENTI_FASCICOLO VARCHAR2(4000 BYTE), SPESA VARCHAR2(255 BYTE), CIG VARCHAR2(500 BYTE), TIPO_ATTO VARCHAR2(255 BYTE), UTENTE_INSERIMENTO VARCHAR2(255 BYTE), FORMATO_FILE VARCHAR2(255 BYTE), UNITA_CONTROLLO VARCHAR2(255 BYTE), ID_FATTURE VARCHAR2(1000 BYTE), FIRMATARI VARCHAR2(1000 BYTE), DETERMINA_ID NUMBER(19), DATA_INS TIMESTAMP(6), ENTE VARCHAR2(255 BYTE) ) LOGGING NOCOMPRESS NOCACHE NOPARALLEL MONITORING
/

CREATE UNIQUE INDEX PK_AQALL ON AG_ACQUISIZIONE_ALLEGATI (APPLICATIVO_ESTERNO, ID_DOC_ESTERNO, ID_DOC_ALLEGATO) LOGGING NOPARALLEL
/

CREATE OR REPLACE TRIGGER "AG_ACQUISIZIONE_DETERMINE_TIU" 
BEFORE INSERT OR UPDATE
ON AG_ACQUISIZIONE_DETERMINE 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
BEGIN

    IF INSERTING  and :new.oggetto IS NOT NULL then
   :new.oggetto := upper (:new.oggetto);
   end if;
   IF :new.oggetto IS NOT NULL
   THEN
      IF (:new.oggetto <> NVL (:old.oggetto, ' '))
      --IF UPDATING ('oggetto') OR INSERTING ('oggetto')
      THEN
         :new.oggetto := REPLACE (:new.oggetto, ' ¬ø ', ' - ');
         :new.oggetto := REPLACE (:new.oggetto, 'A¬ø ', 'A'' ');
         :new.oggetto := REPLACE (:new.oggetto, '√Ä', 'A''');
         :new.oggetto := REPLACE (:new.oggetto, 'L¬ø', 'L''');
         :new.oggetto := REPLACE (:new.oggetto, '¬ø', '''');
         :new.oggetto := REPLACE (:new.oggetto, CHR (13) || CHR (10), ' ');
         :new.oggetto := REPLACE (:new.oggetto, '¬∞', '.');
         :new.oggetto := REPLACE (:new.oggetto, ' ? ',' - '); 
         :new.oggetto := REPLACE (:new.oggetto, 'L?','L''');  
         :new.oggetto := REPLACE (:new.oggetto, ' ? ',' - ');    
         :new.oggetto := REPLACE (:new.oggetto, '?', '''');   
         :new.oggetto := REPLACE (:new.oggetto,'√â','E''');    
         :new.oggetto := REPLACE (:new.oggetto,'√í','O''');  
         :new.oggetto := REPLACE (:new.oggetto,'¬∑',''); 
      END IF;
   END IF;
END AG_ACQUISIZIONE_DETERMINE_TIU;
/

ALTER TABLE AG_ACQUISIZIONE_ALLEGATI ADD (  CONSTRAINT PK_AQALL PRIMARY KEY (APPLICATIVO_ESTERNO, ID_DOC_ESTERNO, ID_DOC_ALLEGATO) USING INDEX PK_AQALL ENABLE VALIDATE)
/

ALTER TABLE AG_ACQUISIZIONE_DETERMINE ADD (  PRIMARY KEY (APPLICATIVO_ESTERNO, ID_DOC_ESTERNO) ENABLE VALIDATE)
/

-- Gestione dei certificati di immediata eseguibilit√†.
ALTER TABLE TIPI_DELIBERA ADD (ID_TIPO_CERT_IMM_ESEG NUMBER(19))
/

-- gestione della chiusura automatica dei registri al rinnovo automatico.
ALTER TABLE TIPI_REGISTRO ADD (CHIUSURA_AUTOMATICA CHAR(1 BYTE) DEFAULT 'Y' NOT NULL)
/

-- gestione della visualizzazione del tipo_registro nel visualizzatore.
ALTER TABLE TIPI_REGISTRO ADD (VISUALIZZATORE CHAR(1 BYTE) DEFAULT 'Y' NOT NULL)
/

-- GESTIONE MOVIMENTI CONTABILI:
CREATE TABLE MOVIMENTI_CONTABILI ( ID_DOCUMENTO NUMBER(19) NOT NULL, TIPO_DOCUMENTO VARCHAR2(255 BYTE) NOT NULL, ANNO_COMPETENZA NUMBER(19), ANNO_ESERCIZIO NUMBER(19), ANNO_CRONO NUMBER(19), ARTICOLO VARCHAR2(255 BYTE), CAPITOLO VARCHAR2(255 BYTE), CODICE_FINANZIAMENTO_1 VARCHAR2(255 BYTE), CODICE_FINANZIAMENTO_2 VARCHAR2(255 BYTE), CODICE_FINANZIAMENTO_3 VARCHAR2(255 BYTE), CODICE_SOGGETTO VARCHAR2(255 BYTE), DATA_DETTAGLIO DATE, DESCRIZIONE_FINANZIAMENTO_1 VARCHAR2(4000 BYTE), DESCRIZIONE_FINANZIAMENTO_2 VARCHAR2(4000 BYTE), DESCRIZIONE_FINANZIAMENTO_3 VARCHAR2(4000 BYTE), DESCRIZIONE VARCHAR2(4000 BYTE), DESCRIZIONE_CAPITOLO VARCHAR2(4000 BYTE), DESCRIZIONE_INVESTIMENTO VARCHAR2(4000 BYTE), DESCRIZIONE_SOGGETTO VARCHAR2(4000 BYTE), DISPOSIZIONE_MANDATI NUMBER(19,2), PRENOTAZIONE CHAR(1 BYTE), IMPORTO_FINANZIAMENTO_1 NUMBER(19,2), IMPORTO_FINANZIAMENTO_2 NUMBER(19,2), IMPORTO_FINANZIAMENTO_3 NUMBER(19,2), IMPORTO NUMBER(19,2), IMPORTO_CASSA NUMBER(19,2), INVESTIMENTO VARCHAR2(255 BYTE), MISSIONE VARCHAR2(255 BYTE), NUMERO NUMBER(19), NUMERO_CRONO NUMBER(19), NUMERO_DET NUMBER(19), OPERA VARCHAR2(255 BYTE), PDC_LIV_5 VARCHAR2(255 BYTE), PDC_LIV_4 VARCHAR2(255 BYTE), PDC_LIV_3 VARCHAR2(255 BYTE), PDC_LIV_2 VARCHAR2(255 BYTE), PDC_LIV_1 VARCHAR2(255 BYTE), PROGETTO VARCHAR2(255 BYTE), PROGRAMMA VARCHAR2(255 BYTE), SUB_NUMERO NUMBER(19), TIPO VARCHAR2(255 BYTE), TIPO_DETTAGLIO VARCHAR2(255 BYTE), TIPO_VARIAZIONE_DI_BILANCIO VARCHAR2(255 BYTE), NUMERO_VARIAZIONE NUMBER(19), ID_MOVIMENTO_CONTABILE NUMBER(19) NOT NULL, ENTE VARCHAR2(255 BYTE) NOT NULL, DATA_INS DATE NOT NULL, DATA_UPD DATE NOT NULL, UTENTE_INS VARCHAR2(255 BYTE) NOT NULL, UTENTE_UPD VARCHAR2(255 BYTE) NOT NULL, VERSION NUMBER(19) DEFAULT 0 NOT NULL ) LOGGING NOCOMPRESS NOCACHE NOPARALLEL MONITORING
/


CREATE INDEX MOV_CONT_ID_TIPO_DOC_IK ON MOVIMENTI_CONTABILI (ID_DOCUMENTO, TIPO_DOCUMENTO) LOGGING NOPARALLEL
/


CREATE UNIQUE INDEX MOV_CONT_IDX ON MOVIMENTI_CONTABILI (ID_MOVIMENTO_CONTABILE) LOGGING NOPARALLEL
/

ALTER TABLE MOVIMENTI_CONTABILI ADD (  CONSTRAINT MOV_CONT_IDX PRIMARY KEY (ID_MOVIMENTO_CONTABILE) USING INDEX MOV_CONT_IDX ENABLE VALIDATE)
/

-- per genova: mostrare i movimenti contabili solo nei documenti che hanno la tipologia a Y.
ALTER TABLE TIPI_DETERMINA ADD (MOVIMENTI_CONTABILI CHAR(1 BYTE) DEFAULT 'Y' NOT NULL)
/

ALTER TABLE TIPI_DELIBERA ADD (MOVIMENTI_CONTABILI CHAR(1 BYTE) DEFAULT 'Y' NOT NULL)
/

-- migliore gestione transazione di firma
ALTER TABLE FIRMATARI ADD (DATA_INS DATE)
/

ALTER TABLE FIRMATARI ADD (DATA_UPD DATE)
/

ALTER TABLE FIRMATARI ADD (UTENTE_INS VARCHAR2(255))
/

ALTER TABLE FIRMATARI ADD (UTENTE_UPD VARCHAR2(255))
/

update firmatari 
   set UTENTE_INS = utente_firmatario
     , utente_upd = utente_firmatario
     , data_ins   = nvl(data_firma, sysdate)
     , data_upd   = nvl(data_firma, sysdate)
/

update firmatari set utente_upd = utente_firmatario
/

ALTER TABLE FIRMATARI MODIFY(UTENTE_UPD NOT NULL)
/

ALTER TABLE FIRMATARI MODIFY(UTENTE_INS NOT NULL)
/

ALTER TABLE FIRMATARI MODIFY(data_ins NOT NULL)
/

ALTER TABLE FIRMATARI MODIFY(data_upd NOT NULL)
/

-- gestione del tipo di pubblicazione all'albo
ALTER TABLE TIPI_DELIBERA ADD (TIPO_PUBBLICAZIONE_ALBO  VARCHAR2(255 BYTE))
/

ALTER TABLE TIPI_DETERMINA ADD (TIPO_PUBBLICAZIONE_ALBO  VARCHAR2(255 BYTE))
/

-- ordinamento dei soggetti nelle commissioni
-- http://svi-redmine/issues/14205
begin
for c in (select cc.id_commissione_componente, cc.id_commissione, cc.sequenza, cc.valido, row_number() over (partition by cc.id_commissione order by cc.id_commissione, cc.sequenza asc) sequenza_nuova
  from odg_commissioni_componenti cc 
 where cc.valido = 'Y' 
 order by cc.id_commissione asc, cc.sequenza asc, cc.id_commissione_componente asc)
 loop
    update odg_commissioni_componenti cc set cc.sequenza = c.sequenza_nuova where cc.id_commissione_componente = c.id_commissione_componente;
 end loop;
 commit;
end;
/

begin
for c in (select cc.id_oggetto_partecipante, cc.id_oggetto_seduta, cc.sequenza, row_number() over (partition by cc.id_oggetto_seduta order by cc.id_oggetto_seduta, cc.sequenza asc) sequenza_nuova
  from odg_oggetti_partecipanti cc 
 order by cc.id_oggetto_seduta asc, cc.sequenza asc, cc.id_oggetto_partecipante asc)
 loop
    update odg_oggetti_partecipanti cc set cc.sequenza = c.sequenza_nuova where cc.id_oggetto_partecipante = c.id_oggetto_partecipante;
 end loop;
 commit;
end;
/

begin
for c in (select cc.id_seduta_partecipante, cc.id_seduta, cc.sequenza, row_number() over (partition by cc.id_seduta order by cc.id_seduta, cc.sequenza asc) sequenza_nuova
  from odg_sedute_partecipanti cc 
 order by cc.id_seduta asc, cc.sequenza asc, cc.id_seduta_partecipante asc)
 loop
    update odg_sedute_partecipanti cc set cc.sequenza = c.sequenza_nuova where cc.id_seduta_partecipante = c.id_seduta_partecipante;
 end loop;
 commit;
end;
/

begin
for c in (select cc.id_seduta_partecipante, cc.id_seduta, cc.sequenza_partecipante, row_number() over (partition by cc.id_seduta order by cc.id_seduta, cc.sequenza_partecipante asc) sequenza_nuova
  from odg_sedute_partecipanti cc 
 order by cc.id_seduta asc, cc.sequenza_partecipante asc, cc.id_seduta_partecipante asc)
 loop
    update odg_sedute_partecipanti cc set cc.sequenza_partecipante = c.sequenza_nuova where cc.id_seduta_partecipante = c.id_seduta_partecipante;
 end loop;
 commit;
end;
/

-- elimino tutte le costraint dello user e le ricreo:
begin 
for c in ( 
select fk.owner             fk_owner
     , fk.constraint_name   fk_constraint_name
     , fk.table_name        fk_table_name
     , c.column_name        fk_column_name
     , fk.r_owner           ref_owner
     , ref.table_name       ref_table_name
     , c_ref.column_name    ref_column_name
  from user_cons_columns c
     , user_cons_columns c_ref
     , user_constraints fk
     , user_constraints ref
 where c.owner = fk.owner
   and c.constraint_name        = fk.constraint_name
   and fk.constraint_type       = 'R'
   and ref.constraint_name      = fk.r_constraint_name
   and ref.owner                = fk.owner
   and c_ref.constraint_name    = ref.constraint_name
   and c_ref.owner              = ref.owner)
    loop
        begin
            execute immediate 'ALTER TABLE '||c.fk_owner||'.'||c.fk_table_name||' DROP CONSTRAINT '||c.fk_constraint_name||'';
        exception when others then
            null;
        end;
    end loop;
end;
/

-- ricreo tutte le costraint:
ALTER TABLE ALLEGATI ADD CONSTRAINT ALL_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE ALLEGATI ADD CONSTRAINT ALL_TIPALL_FK FOREIGN KEY (ID_TIPO_ALLEGATO) REFERENCES TIPI_ALLEGATO (ID_TIPO_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE ALLEGATI ADD CONSTRAINT ALL_VISPAR_FK FOREIGN KEY (ID_VISTO_PARERE) REFERENCES VISTI_PARERI (ID_VISTO_PARERE) ENABLE VALIDATE
/
ALTER TABLE ALLEGATI ADD CONSTRAINT ALL_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE ALLEGATI ADD CONSTRAINT ALL_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE ALLEGATI_COMPETENZE ADD CONSTRAINT ALLCOM_ALL_FK FOREIGN KEY (ID_ALLEGATO) REFERENCES ALLEGATI (ID_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE ALLEGATI_FILE ADD CONSTRAINT ALLFIL_FILALL_FK FOREIGN KEY (ID_FILE) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE ALLEGATI_FILE ADD CONSTRAINT ALLFIL_ALL_FK FOREIGN KEY (ID_ALLEGATO) REFERENCES ALLEGATI (ID_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE CAMPI_DOCUMENTO ADD CONSTRAINT CAMDOC_WKFDIZTIPOGG_FK FOREIGN KEY (TIPO_OGGETTO) REFERENCES WKF_DIZ_TIPI_OGGETTO (CODICE) ENABLE VALIDATE
/
ALTER TABLE CARATTERISTICHE_TIPI_SOGGETTO ADD CONSTRAINT CARTIPSOG_REGCAL_LIS_FK FOREIGN KEY (ID_REGOLA_LISTA) REFERENCES REGOLE_CALCOLO (ID_REGOLA) ENABLE VALIDATE
/
ALTER TABLE CARATTERISTICHE_TIPI_SOGGETTO ADD CONSTRAINT CARTIPSOG_REGCAL_DEF_FK FOREIGN KEY (ID_REGOLA_DEFAULT) REFERENCES REGOLE_CALCOLO (ID_REGOLA) ENABLE VALIDATE
/
ALTER TABLE CARATTERISTICHE_TIPI_SOGGETTO ADD CONSTRAINT CARTIPSOG_TIPSOG_PAR_FK FOREIGN KEY (TIPO_SOGGETTO_PARTENZA) REFERENCES TIPI_SOGGETTI (CODICE) ENABLE VALIDATE
/
ALTER TABLE CARATTERISTICHE_TIPI_SOGGETTO ADD CONSTRAINT CARTIPSOG_CARTIP_FK FOREIGN KEY (ID_CARATTERISTICA_TIPOLOGIA) REFERENCES CARATTERISTICHE_TIPOLOGIE (ID_CARATTERISTICA_TIPOLOGIA) ENABLE VALIDATE
/
ALTER TABLE CARATTERISTICHE_TIPI_SOGGETTO ADD CONSTRAINT CARTIPSOG_TIPSOG_FK FOREIGN KEY (TIPO_SOGGETTO) REFERENCES TIPI_SOGGETTI (CODICE) ENABLE VALIDATE
/
ALTER TABLE CARATTERISTICHE_TIPOLOGIE ADD CONSTRAINT CARTIP_WKFDIZTIPOGG_FK FOREIGN KEY (TIPO_OGGETTO) REFERENCES WKF_DIZ_TIPI_OGGETTO (CODICE) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI ADD CONSTRAINT CER_FILALL_ODT_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO_ODT) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI ADD CONSTRAINT CER_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI ADD CONSTRAINT CER_FILALL_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI ADD CONSTRAINT CER_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI ADD CONSTRAINT CER_TIPCER_FK FOREIGN KEY (ID_TIPOLOGIA) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI ADD CONSTRAINT CER_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI ADD CONSTRAINT CER_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE CERTIFICATI_COMPETENZE ADD CONSTRAINT CERCOM_CER_FK FOREIGN KEY (ID_CERTIFICATO) REFERENCES CERTIFICATI (ID_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_FILALL_ODT_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO_ODT) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_TIPREG_DEL_FK FOREIGN KEY (REGISTRO_DELIBERA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_TIPREG_PRO_FK FOREIGN KEY (REGISTRO_PROTOCOLLO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_FILALL_SU_FK FOREIGN KEY (ID_FILE_ALLEGATO_STAMPA_UNICA) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_FILALL_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE ADD CONSTRAINT DEL_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_COMPETENZE ADD CONSTRAINT DELCOM_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_SOGGETTI ADD CONSTRAINT DELSOG_TIPSOG_FK FOREIGN KEY (TIPO_SOGGETTO) REFERENCES TIPI_SOGGETTI (CODICE) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_SOGGETTI ADD CONSTRAINT DELSOG_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_FILALLSTO_SU_FK FOREIGN KEY (ID_FILE_ALLEGATO_STAMPA_UNICA) REFERENCES FILE_ALLEGATI_STORICO (ID_FILE_ALLEGATO_STORICO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_TIPREG_DEL_FK FOREIGN KEY (REGISTRO_DELIBERA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_TIPREG_PRO_FK FOREIGN KEY (REGISTRO_PROTOCOLLO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_FILALLSTO_FK FOREIGN KEY (ID_FILE_ALLEGATO) REFERENCES FILE_ALLEGATI_STORICO (ID_FILE_ALLEGATO_STORICO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_WKFENGSTE_FK FOREIGN KEY (ID_ENGINE_STEP) REFERENCES WKF_ENGINE_STEP (ID_ENGINE_STEP) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE DELIBERE_STORICO ADD CONSTRAINT DELSTO_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE ADD CONSTRAINT DESNOT_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE ADD CONSTRAINT DESNOT_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE ADD CONSTRAINT DESNOT_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE ADD CONSTRAINT DESNOT_EMA_FK FOREIGN KEY (ID_EMAIL) REFERENCES EMAIL (ID_EMAIL) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE_ATTIVITA ADD CONSTRAINT DESNOTATT_DESNOT_FK FOREIGN KEY (ID_DESTINATARIO_NOTIFICA) REFERENCES DESTINATARI_NOTIFICHE (ID_DESTINATARIO_NOTIFICA) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE_ATTIVITA ADD CONSTRAINT DESNOTATT_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE_ATTIVITA ADD CONSTRAINT DESNOTATT_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DESTINATARI_NOTIFICHE_ATTIVITA ADD CONSTRAINT DESNOTATT_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_TIPREG_PROT_FK FOREIGN KEY (REGISTRO_PROTOCOLLO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_TIPREG_PROP_FK FOREIGN KEY (REGISTRO_PROPOSTA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_FILALL_ODT_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO_ODT) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_TIPREG_DET_FK FOREIGN KEY (REGISTRO_DETERMINA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_FILALL_SU_FK FOREIGN KEY (ID_FILE_ALLEGATO_STAMPA_UNICA) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_FILALL_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_TIPDET_FK FOREIGN KEY (ID_TIPO_DETERMINA) REFERENCES TIPI_DETERMINA (ID_TIPO_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE ADD CONSTRAINT DET_CAT_FK FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIE (ID_CATEGORIA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_COMPETENZE ADD CONSTRAINT DETCOM_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_SOGGETTI ADD CONSTRAINT DETSOG_TIPSOG_FK FOREIGN KEY (TIPO_SOGGETTO) REFERENCES TIPI_SOGGETTI (CODICE) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_SOGGETTI ADD CONSTRAINT DETSOG_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_FILALLSTO_SU_FK FOREIGN KEY (ID_FILE_ALLEGATO_STAMPA_UNICA) REFERENCES FILE_ALLEGATI_STORICO (ID_FILE_ALLEGATO_STORICO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_TIPREG_PROT_FK FOREIGN KEY (REGISTRO_PROTOCOLLO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_TIPREG_PROP_FK FOREIGN KEY (REGISTRO_PROPOSTA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_TIPREG_DET_FK FOREIGN KEY (REGISTRO_DETERMINA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_FILALLSTO_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI_STORICO (ID_FILE_ALLEGATO_STORICO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_WKFENGSTE_FK FOREIGN KEY (ID_ENGINE_STEP) REFERENCES WKF_ENGINE_STEP (ID_ENGINE_STEP) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_TIPDET_FK FOREIGN KEY (ID_TIPO_DETERMINA) REFERENCES TIPI_DETERMINA (ID_TIPO_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE DETERMINE_STORICO ADD CONSTRAINT DETSTO_CAT_FK FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIE (ID_CATEGORIA) ENABLE VALIDATE
/
ALTER TABLE DOCUMENTI_COLLEGATI ADD CONSTRAINT DOCCOL_PRODEL_PRINC_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA_PRINC) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DOCUMENTI_COLLEGATI ADD CONSTRAINT DOCCOL_DET_PRINC_FK FOREIGN KEY (ID_DETERMINA_PRINCIPALE) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE DOCUMENTI_COLLEGATI ADD CONSTRAINT DOCCOL_DEL_FK FOREIGN KEY (ID_DELIBERA_COLLEGATA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE DOCUMENTI_COLLEGATI ADD CONSTRAINT DOCCOL_DET_FK FOREIGN KEY (ID_DETERMINA_COLLEGATA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE FIRMA_DIGITALE_FILE ADD CONSTRAINT FIRDIGFIL_FIRDIGTRA_FK FOREIGN KEY (TRANSAZIONE_ID) REFERENCES FIRMA_DIGITALE_TRANSAZIONE (ID) ENABLE VALIDATE
/
ALTER TABLE FIRMATARI ADD CONSTRAINT FIR_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE FIRMATARI ADD CONSTRAINT FIR_VISPAR_FK FOREIGN KEY (ID_VISTO_PARERE) REFERENCES VISTI_PARERI (ID_VISTO_PARERE) ENABLE VALIDATE
/
ALTER TABLE FIRMATARI ADD CONSTRAINT FIR_CER_FK FOREIGN KEY (ID_CERTIFICATO) REFERENCES CERTIFICATI (ID_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE FIRMATARI ADD CONSTRAINT FIR_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE FIRMATARI ADD CONSTRAINT FIR_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE GTE_DETTAGLI_LOCK ADD CONSTRAINT GTEDETLOC_GTETIPMOD_FK FOREIGN KEY (ID_TIPO_MODELLO) REFERENCES GTE_TIPI_MODELLO (CODICE) ENABLE VALIDATE
/
ALTER TABLE GTE_DETTAGLI_LOCK ADD CONSTRAINT GTEDETLOC_GTELOC_FK FOREIGN KEY (ID_LOCK) REFERENCES GTE_LOCK (ID_RIFERIMENTO_TESTO) ENABLE VALIDATE
/
ALTER TABLE GTE_MODELLI ADD CONSTRAINT GTEMOD_GTETIPMOD_FK FOREIGN KEY (TIPO_MODELLO) REFERENCES GTE_TIPI_MODELLO (CODICE) ENABLE VALIDATE
/
ALTER TABLE GTE_MODELLI_COMPETENZA ADD CONSTRAINT GTEMODCOM_GTEMOD_FK FOREIGN KEY (ID_MODELLO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE NOTIFICHE ADD CONSTRAINT NOT_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE NOTIFICHE ADD CONSTRAINT NOT_ORGCON_FK FOREIGN KEY (ID_ORGANO_CONTROLLO) REFERENCES ORGANI_CONTROLLO (ID_ORGANO_CONTROLLO) ENABLE VALIDATE
/
ALTER TABLE NOTIFICHE_EMAIL ADD CONSTRAINT NOTEMA_EMA_FK FOREIGN KEY (ID_EMAIL) REFERENCES EMAIL (ID_EMAIL) ENABLE VALIDATE
/
ALTER TABLE NOTIFICHE_EMAIL ADD CONSTRAINT NOTEMA_NOT_FK FOREIGN KEY (ID_NOTIFICA) REFERENCES NOTIFICHE (ID_NOTIFICA) ENABLE VALIDATE
/
ALTER TABLE ODG_COMMISSIONI ADD CONSTRAINT ODGCOM_TIPREG_SED_FK FOREIGN KEY (ID_TIPO_REGISTRO_SEDUTA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE ODG_COMMISSIONI ADD CONSTRAINT ODGCOM_TIPREG_FK FOREIGN KEY (ID_TIPO_REGISTRO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE ODG_COMMISSIONI_COMPONENTI ADD CONSTRAINT ODGCOMCOM_ODGRUOPAR_FK FOREIGN KEY (RUOLO_PARTECIPANTE) REFERENCES ODG_RUOLI_PARTECIPANTI (RUOLO_PARTECIPANTE) ENABLE VALIDATE
/
ALTER TABLE ODG_COMMISSIONI_COMPONENTI ADD CONSTRAINT ODGCOMCOM_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE ODG_COMMISSIONI_COMPONENTI ADD CONSTRAINT ODGCOMCOM_ODGINC_FK FOREIGN KEY (ID_INCARICO) REFERENCES ODG_INCARICHI (ID_INCARICO) ENABLE VALIDATE
/
ALTER TABLE ODG_COMMISSIONI_STAMPE ADD CONSTRAINT ODGCOMSTA_GTEMOD_FK FOREIGN KEY (ID_MODELLO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE ODG_COMMISSIONI_STAMPE ADD CONSTRAINT ODGCOMSTA_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE ODG_ESITI ADD CONSTRAINT ODGESI_ODGCOM_ARR_FK FOREIGN KEY (ID_COMMISSIONE_ARRIVO) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE ODG_ESITI ADD CONSTRAINT ODGESI_ODGESISTA_FK FOREIGN KEY (ESITO_STANDARD) REFERENCES ODG_ESITI_STANDARD (ESITO_STANDARD) ENABLE VALIDATE
/
ALTER TABLE ODG_ESITI ADD CONSTRAINT ODGESI_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE ODG_GETTONI_PRESENZA ADD CONSTRAINT ODGGETPRE_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE ODG_IMPORTI_GETTONE ADD CONSTRAINT ODGIMPGET_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_PARTECIPANTI ADD CONSTRAINT ODGOGGPAR_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_PARTECIPANTI ADD CONSTRAINT ODGOGGPAR_ODGRUOPAR_FK FOREIGN KEY (RUOLO_PARTECIPANTE) REFERENCES ODG_RUOLI_PARTECIPANTI (RUOLO_PARTECIPANTE) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_PARTECIPANTI ADD CONSTRAINT ODGOGGPAR_ODGSEDPAR_FK FOREIGN KEY (ID_SEDUTA_PARTECIPANTE) REFERENCES ODG_SEDUTE_PARTECIPANTI (ID_SEDUTA_PARTECIPANTE) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_PARTECIPANTI ADD CONSTRAINT ODGOGGPAR_ODGVOT_FK FOREIGN KEY (ID_VOTO) REFERENCES ODG_VOTI (ID_VOTO) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_SEDUTA ADD CONSTRAINT ODGOGGSED_FILALL_FK FOREIGN KEY (ID_ALLEGATO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_SEDUTA ADD CONSTRAINT ODGOGGSED_ODGESI_FK FOREIGN KEY (ID_ESITO) REFERENCES ODG_ESITI (ID_ESITO) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_SEDUTA ADD CONSTRAINT ODGOGGSED_ODGSED_FK FOREIGN KEY (ID_SEDUTA) REFERENCES ODG_SEDUTE (ID_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_SEDUTA ADD CONSTRAINT ODGOGGSED_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_SEDUTA ADD CONSTRAINT ODGOGGSED_DEL_FK FOREIGN KEY (ID_DELEGA) REFERENCES DELEGHE (ID_DELEGA) ENABLE VALIDATE
/
ALTER TABLE ODG_OGGETTI_SEDUTA ADD CONSTRAINT ODGOGGSED_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE ADD CONSTRAINT ODGSED_ODGTIPSED_FK FOREIGN KEY (ID_TIPO_SEDUTA) REFERENCES ODG_TIPI_SEDUTA (ID_TIPO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE ADD CONSTRAINT ODGSED_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE ADD CONSTRAINT ODGSED_ODGSED_FK FOREIGN KEY (ID_SECONDA_SEDUTA) REFERENCES ODG_SEDUTE (ID_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_NOTIFICHE ADD CONSTRAINT ODGSEDNOT_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_NOTIFICHE ADD CONSTRAINT ODGSEDNOT_ODGSED_FK FOREIGN KEY (ID_SEDUTA) REFERENCES ODG_SEDUTE (ID_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_NOTIFICHE ADD CONSTRAINT ODGSEDNOT_NOT_FK FOREIGN KEY (ID_NOTIFICA) REFERENCES NOTIFICHE (ID_NOTIFICA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_PARTECIPANTI ADD CONSTRAINT ODGSEDPAR_ODGCOMCOM_FK FOREIGN KEY (ID_COMMISSIONE_COMPONENTE) REFERENCES ODG_COMMISSIONI_COMPONENTI (ID_COMMISSIONE_COMPONENTE) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_PARTECIPANTI ADD CONSTRAINT ODGSEDPAR_ODGRUOPAR_FK FOREIGN KEY (RUOLO_PARTECIPANTE) REFERENCES ODG_RUOLI_PARTECIPANTI (RUOLO_PARTECIPANTE) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_PARTECIPANTI ADD CONSTRAINT ODGSEDPAR_ODGINC_FK FOREIGN KEY (ID_INCARICO) REFERENCES ODG_INCARICHI (ID_INCARICO) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_PARTECIPANTI ADD CONSTRAINT ODGSEDPAR_ODGSED_FK FOREIGN KEY (ID_SEDUTA) REFERENCES ODG_SEDUTE (ID_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_STAMPE ADD CONSTRAINT ODGSEDSTA_ODGCOMSTA_FK FOREIGN KEY (ID_COMMISSIONE_STAMPA) REFERENCES ODG_COMMISSIONI_STAMPE (ID_COMMISSIONE_STAMPA) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_STAMPE ADD CONSTRAINT ODGSEDSTA_FILALL_FK FOREIGN KEY (ID_ALLEGATO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE ODG_SEDUTE_STAMPE ADD CONSTRAINT ODGSEDSTA_ODGSED_FK FOREIGN KEY (ID_SEDUTA) REFERENCES ODG_SEDUTE (ID_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO ADD CONSTRAINT ORGCON_TIPORGCON_FK FOREIGN KEY (TIPO_ORGANO_CONTROLLO) REFERENCES TIPI_ORGANO_CONTROLLO (TIPO_ORGANO_CONTROLLO) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_COMPONENTI ADD CONSTRAINT ORGCONCOM_ORGCONRUO_FK FOREIGN KEY (ID_ORGANO_CONTROLLO_RUOLO) REFERENCES ORGANI_CONTROLLO_RUOLI (ID_ORGANO_CONTROLLO_RUOLO) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_COMPONENTI ADD CONSTRAINT ORGCONCOM_ORGCON_FK FOREIGN KEY (ID_ORGANO_CONTROLLO) REFERENCES ORGANI_CONTROLLO (ID_ORGANO_CONTROLLO) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_NOTIFICHE ADD CONSTRAINT ORGCONNOT_TIPORGCON_FK FOREIGN KEY (TIPO_ORGANO_CONTROLLO) REFERENCES TIPI_ORGANO_CONTROLLO (TIPO_ORGANO_CONTROLLO) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_NOTIFICHE ADD CONSTRAINT ORGCONNOT_FILALL_FK FOREIGN KEY (ID_FILE_ALLEGATO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_NOTIFICHE ADD CONSTRAINT ORGCONNOT_TIPREG_FK FOREIGN KEY (TIPO_REGISTRO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_NOTIFICHE_DOC ADD CONSTRAINT ORGCONNOTDOC_ORGCONNOT_FK FOREIGN KEY (ID_ORGANO_CONTROLLO_NOTIFICA) REFERENCES ORGANI_CONTROLLO_NOTIFICHE (ID_ORGANO_CONTROLLO_NOTIFICA) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_NOTIFICHE_DOC ADD CONSTRAINT ORGCONNOTDOC_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_NOTIFICHE_DOC ADD CONSTRAINT ORGCONNOTDOC_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE ORGANI_CONTROLLO_RUOLI ADD CONSTRAINT ORGCONRUO_ORGCON_FK FOREIGN KEY (ID_ORGANO_CONTROLLO) REFERENCES ORGANI_CONTROLLO (ID_ORGANO_CONTROLLO) ENABLE VALIDATE
/
ALTER TABLE PARAMETRI_TIPOLOGIE ADD CONSTRAINT PARTIP_WKFDIZGRUSTE_FK FOREIGN KEY (ID_GRUPPO_STEP) REFERENCES WKF_DIZ_GRUPPI_STEP (ID_GRUPPO_STEP) ENABLE VALIDATE
/
ALTER TABLE PARAMETRI_TIPOLOGIE ADD CONSTRAINT PARTIP_TIPDEL_FK FOREIGN KEY (ID_TIPO_DELIBERA) REFERENCES TIPI_DELIBERA (ID_TIPO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE PARAMETRI_TIPOLOGIE ADD CONSTRAINT PARTIP_TIPDET_FK FOREIGN KEY (ID_TIPO_DETERMINA) REFERENCES TIPI_DETERMINA (ID_TIPO_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_FILALL_ODT_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO_ODT) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_GTEMOD_ANN_FK FOREIGN KEY (ID_MODELLO_TESTO_ANNULLAMENTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_FILALL_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_INDDEL_FK FOREIGN KEY (ID_INDIRIZZO_DELIBERA) REFERENCES INDIRIZZI_DELIBERA (ID_INDIRIZZO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_TIPDEL_FK FOREIGN KEY (ID_TIPO_DELIBERA) REFERENCES TIPI_DELIBERA (ID_TIPO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_TIPREG_FK FOREIGN KEY (REGISTRO_PROPOSTA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_CAT_FK FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIE (ID_CATEGORIA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA ADD CONSTRAINT PRODEL_DEL_FK FOREIGN KEY (ID_DELEGA) REFERENCES DELEGHE (ID_DELEGA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_COMPETENZE ADD CONSTRAINT PRODELCOM_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_SOGGETTI ADD CONSTRAINT PRODELSOG_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_SOGGETTI ADD CONSTRAINT PRODELSOG_TIPSOG_FK FOREIGN KEY (TIPO_SOGGETTO) REFERENCES TIPI_SOGGETTI (CODICE) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_GTEMOD_ANN_FK FOREIGN KEY (ID_MODELLO_TESTO_ANNULLAMENTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_FILALLSTO_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI_STORICO (ID_FILE_ALLEGATO_STORICO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_ODGOGGSED_FK FOREIGN KEY (ID_OGGETTO_SEDUTA) REFERENCES ODG_OGGETTI_SEDUTA (ID_OGGETTO_SEDUTA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_WKFENGSTE_FK FOREIGN KEY (ID_ENGINE_STEP) REFERENCES WKF_ENGINE_STEP (ID_ENGINE_STEP) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_INDDEL_FK FOREIGN KEY (ID_INDIRIZZO_DELIBERA) REFERENCES INDIRIZZI_DELIBERA (ID_INDIRIZZO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_TIPDEL_FK FOREIGN KEY (ID_TIPO_DELIBERA) REFERENCES TIPI_DELIBERA (ID_TIPO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_TIPREG_FK FOREIGN KEY (REGISTRO_PROPOSTA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_CAT_FK FOREIGN KEY (ID_CATEGORIA) REFERENCES CATEGORIE (ID_CATEGORIA) ENABLE VALIDATE
/
ALTER TABLE PROPOSTE_DELIBERA_STORICO ADD CONSTRAINT PRODELSTO_DEL_FK FOREIGN KEY (ID_DELEGA) REFERENCES DELEGHE (ID_DELEGA) ENABLE VALIDATE
/
ALTER TABLE REGISTRI ADD CONSTRAINT REG_TIPREG_FK FOREIGN KEY (TIPO_REGISTRO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE TIPI_CERTIFICATO ADD CONSTRAINT TIPCER_CARTIP_FK FOREIGN KEY (ID_CARATTERISTICA_TIPOLOGIA) REFERENCES CARATTERISTICHE_TIPOLOGIE (ID_CARATTERISTICA_TIPOLOGIA) ENABLE VALIDATE
/
ALTER TABLE TIPI_CERTIFICATO ADD CONSTRAINT TIPCER_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_TIPCER_AVVPUBB2_FK FOREIGN KEY (ID_TIPO_CERT_AVV_PUBB2) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_TIPCER_AVVPUBB_FK FOREIGN KEY (ID_TIPO_CERT_AVV_PUBB) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_TIPCER_IMMESEG_FK FOREIGN KEY (ID_TIPO_CERT_IMM_ESEG) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_TIPCER_PUBB2_FK FOREIGN KEY (ID_TIPO_CERT_PUBB2) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_TIPCER_PUBB_FK FOREIGN KEY (ID_TIPO_CERT_PUBB) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_TIPCER_ESEC_FK FOREIGN KEY (ID_TIPO_CERT_ESEC) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_CARTIP_FSC_FK FOREIGN KEY (ID_CARATTERISTICA_FUORI_SACCO) REFERENCES CARATTERISTICHE_TIPOLOGIE (ID_CARATTERISTICA_TIPOLOGIA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_CARTIP_FK FOREIGN KEY (ID_CARATTERISTICA_TIPOLOGIA) REFERENCES CARATTERISTICHE_TIPOLOGIE (ID_CARATTERISTICA_TIPOLOGIA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_ODGCOM_FK FOREIGN KEY (ID_COMMISSIONE) REFERENCES ODG_COMMISSIONI (ID_COMMISSIONE) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA ADD CONSTRAINT TIPDEL_TIPREG_FK FOREIGN KEY (ID_TIPO_REGISTRO_DELIBERA) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA_COMPETENZE ADD CONSTRAINT TIPDELCOM_TIPDEL_FK FOREIGN KEY (ID_TIPO_DELIBERA) REFERENCES TIPI_DELIBERA (ID_TIPO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA_MODELLI_TESTO ADD CONSTRAINT TIPDELMODTES_GTEMOD_FK FOREIGN KEY (ID_MODELLO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA_MODELLI_TESTO ADD CONSTRAINT TIPDELMODTES_TIPDEL_FK FOREIGN KEY (ID_TIPO_DELIBERA) REFERENCES TIPI_DELIBERA (ID_TIPO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA_VISTI_PARERI ADD CONSTRAINT TIPDELVISPAR_TIPVISPAR_FK FOREIGN KEY (ID_TIPO_VISTOPARERE) REFERENCES TIPI_VISTO_PARERE (ID_TIPO_VISTO_PARERE) ENABLE VALIDATE
/
ALTER TABLE TIPI_DELIBERA_VISTI_PARERI ADD CONSTRAINT TIPDELVISPAR_TIPDEL_FK FOREIGN KEY (ID_TIPO_DELIBERA) REFERENCES TIPI_DELIBERA (ID_TIPO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_TIPCER_AVVPUBB2_FK FOREIGN KEY (ID_TIPO_CERT_AVV_PUBB2) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_TIPCER_AVVPUBB_FK FOREIGN KEY (ID_TIPO_CERT_AVV_PUBB) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_TIPCER_PUBB2_FK FOREIGN KEY (ID_TIPO_CERT_PUBB2) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_TIPCER_PUBB_FK FOREIGN KEY (ID_TIPO_CERT_PUBB) REFERENCES TIPI_CERTIFICATO (ID_TIPO_CERTIFICATO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_GTEMOD_FRO_FK FOREIGN KEY (ID_MODELLO_TESTO_FRONTESPIZIO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_GTEMOD_ANN_FK FOREIGN KEY (ID_MODELLO_TESTO_ANNULLA) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_CARTIP_FK FOREIGN KEY (ID_CARATTERISTICA_TIPOLOGIA) REFERENCES CARATTERISTICHE_TIPOLOGIE (ID_CARATTERISTICA_TIPOLOGIA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA ADD CONSTRAINT TIPDET_TIPREG_FK FOREIGN KEY (ID_TIPO_REGISTRO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA_COMPETENZE ADD CONSTRAINT TIPDETCOM_TIPDET_FK FOREIGN KEY (ID_TIPO_DETERMINA) REFERENCES TIPI_DETERMINA (ID_TIPO_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA_MODELLI_TESTO ADD CONSTRAINT TIPDETMODTES_GTEMOD_FK FOREIGN KEY (ID_MODELLO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA_MODELLI_TESTO ADD CONSTRAINT TIPDETMODTES_TIPDET_FK FOREIGN KEY (ID_TIPO_DETERMINA) REFERENCES TIPI_DETERMINA (ID_TIPO_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA_VISTI_PARERI ADD CONSTRAINT TIPDETVISPAR_TIPVISPAR_FK FOREIGN KEY (ID_TIPO_VISTOPARERE) REFERENCES TIPI_VISTO_PARERE (ID_TIPO_VISTO_PARERE) ENABLE VALIDATE
/
ALTER TABLE TIPI_DETERMINA_VISTI_PARERI ADD CONSTRAINT TIPDETVISPAR_TIPDET_FK FOREIGN KEY (ID_TIPO_DETERMINA) REFERENCES TIPI_DETERMINA (ID_TIPO_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DOCUMENTO_CF ADD CONSTRAINT TIPDOCCF_TIPDEL_FK FOREIGN KEY (ID_TIPO_DELIBERA) REFERENCES TIPI_DELIBERA (ID_TIPO_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE TIPI_DOCUMENTO_CF ADD CONSTRAINT TIPDOCCF_TIPDET_FK FOREIGN KEY (ID_TIPO_DETERMINA) REFERENCES TIPI_DETERMINA (ID_TIPO_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE TIPI_REGISTRO_UNITA ADD CONSTRAINT TIPREGUNI_CARTIP_FK FOREIGN KEY (ID_CARATTERISTICA) REFERENCES CARATTERISTICHE_TIPOLOGIE (ID_CARATTERISTICA_TIPOLOGIA) ENABLE VALIDATE
/
ALTER TABLE TIPI_REGISTRO_UNITA ADD CONSTRAINT TIPREGUNI_TIPREG_FK FOREIGN KEY (TIPO_REGISTRO) REFERENCES TIPI_REGISTRO (TIPO_REGISTRO) ENABLE VALIDATE
/
ALTER TABLE TIPI_VISTO_PARERE ADD CONSTRAINT TIPVISPAR_CARTIP_FK FOREIGN KEY (ID_CARATTERISTICA_TIPOLOGIA) REFERENCES CARATTERISTICHE_TIPOLOGIE (ID_CARATTERISTICA_TIPOLOGIA) ENABLE VALIDATE
/
ALTER TABLE TIPI_VISTO_PARERE ADD CONSTRAINT TIPVISPAR_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_FILALL_ODT_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO_ODT) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_TIPVISPAR_FK FOREIGN KEY (ID_TIPOLOGIA) REFERENCES TIPI_VISTO_PARERE (ID_TIPO_VISTO_PARERE) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_FILALL_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI (ID_FILE_ALLEGATO) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_GTEMOD_FK FOREIGN KEY (ID_MODELLO_TESTO) REFERENCES GTE_MODELLI (ID_MODELLO) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_DEL_FK FOREIGN KEY (ID_DELIBERA) REFERENCES DELIBERE (ID_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI ADD CONSTRAINT VISPAR_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI_COMPETENZE ADD CONSTRAINT VISPARCOM_VISPAR_FK FOREIGN KEY (ID_VISTO_PARERE) REFERENCES VISTI_PARERI (ID_VISTO_PARERE) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI_STORICO ADD CONSTRAINT VISPARSTO_FILALLSTO_FK FOREIGN KEY (ID_FILE_ALLEGATO_TESTO) REFERENCES FILE_ALLEGATI_STORICO (ID_FILE_ALLEGATO_STORICO) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI_STORICO ADD CONSTRAINT VISPARSTO_TIPVISPAR_FK FOREIGN KEY (ID_TIPOLOGIA) REFERENCES TIPI_VISTO_PARERE (ID_TIPO_VISTO_PARERE) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI_STORICO ADD CONSTRAINT VISPARSTO_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI_STORICO ADD CONSTRAINT VISPARSTO_WKFENGSTE_FK FOREIGN KEY (ID_ENGINE_STEP) REFERENCES WKF_ENGINE_STEP (ID_ENGINE_STEP) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI_STORICO ADD CONSTRAINT VISPARSTO_PRODEL_FK FOREIGN KEY (ID_PROPOSTA_DELIBERA) REFERENCES PROPOSTE_DELIBERA (ID_PROPOSTA_DELIBERA) ENABLE VALIDATE
/
ALTER TABLE VISTI_PARERI_STORICO ADD CONSTRAINT VISPARSTO_DET_FK FOREIGN KEY (ID_DETERMINA) REFERENCES DETERMINE (ID_DETERMINA) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_COMPETENZE ADD CONSTRAINT WKFCFGCOM_WKFDIZPUL_PRO_FK FOREIGN KEY (ID_PULSANTE_PROVENIENZA) REFERENCES WKF_DIZ_PULSANTI (ID_PULSANTE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_COMPETENZE ADD CONSTRAINT WKFCFGCOM_WKFDIZTIPOGG_FK FOREIGN KEY (TIPO_OGGETTO) REFERENCES WKF_DIZ_TIPI_OGGETTO (CODICE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_COMPETENZE ADD CONSTRAINT WKFCFGCOM_WKFCFGSTE_FK FOREIGN KEY (ID_CFG_STEP) REFERENCES WKF_CFG_STEP (ID_CFG_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_COMPETENZE ADD CONSTRAINT WKFCFGCOM_WKFDIZATT_FK FOREIGN KEY (ID_ATTORE) REFERENCES WKF_DIZ_ATTORI (ID_ATTORE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_COMPETENZE ADD CONSTRAINT WKFCFGCOM_WKFDIZPUL_FK FOREIGN KEY (ID_PULSANTE) REFERENCES WKF_DIZ_PULSANTI (ID_PULSANTE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_ITER ADD CONSTRAINT WKFCFGITE_WKFDIZTIPOGG_FK FOREIGN KEY (TIPO_OGGETTO) REFERENCES WKF_DIZ_TIPI_OGGETTO (CODICE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_PULSANTI ADD CONSTRAINT WKFCFGPUL_WKFCFGSTE_SUC_FK FOREIGN KEY (ID_CFG_STEP_SUCCESSIVO) REFERENCES WKF_CFG_STEP (ID_CFG_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_PULSANTI ADD CONSTRAINT WKFCFGPUL_WKFCFGSTE_FK FOREIGN KEY (ID_CFG_STEP) REFERENCES WKF_CFG_STEP (ID_CFG_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_PULSANTI ADD CONSTRAINT WKFCFGPUL_WKFDIZPUL_FK FOREIGN KEY (ID_PULSANTE) REFERENCES WKF_DIZ_PULSANTI (ID_PULSANTE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_PULSANTI_ATTORI ADD CONSTRAINT WKFCFGPULATT_WKFCFGPUL_FK FOREIGN KEY (ID_CFG_PULSANTE) REFERENCES WKF_CFG_PULSANTI (ID_CFG_PULSANTE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_PULSANTI_ATTORI ADD CONSTRAINT WKFCFGPULATT_WKFDIZATT_FK FOREIGN KEY (ID_ATTORE) REFERENCES WKF_DIZ_ATTORI (ID_ATTORE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFCFGSTE_SBL_FK FOREIGN KEY (ID_CFG_STEP_SBLOCCO) REFERENCES WKF_CFG_STEP (ID_CFG_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFDIZAZI_CON_FK FOREIGN KEY (ID_AZIONE_CONDIZIONE) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFDIZAZI_SBL_FK FOREIGN KEY (ID_AZIONE_SBLOCCO) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFCFGSTE_SI_FK FOREIGN KEY (ID_CFG_STEP_SI) REFERENCES WKF_CFG_STEP (ID_CFG_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFCFGSTE_NO_FK FOREIGN KEY (ID_CFG_STEP_NO) REFERENCES WKF_CFG_STEP (ID_CFG_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFDIZGRUSTE_FK FOREIGN KEY (ID_GRUPPO_STEP) REFERENCES WKF_DIZ_GRUPPI_STEP (ID_GRUPPO_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFCFGITE_FK FOREIGN KEY (ID_CFG_ITER) REFERENCES WKF_CFG_ITER (ID_CFG_ITER) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP ADD CONSTRAINT WKFCFGSTE_WKFDIZATT_FK FOREIGN KEY (ID_ATTORE) REFERENCES WKF_DIZ_ATTORI (ID_ATTORE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP_AZIONI_IN ADD CONSTRAINT WKFCFGSTEAZIIN_WKFDIZAZI_FK FOREIGN KEY (ID_AZIONE_IN) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_CFG_STEP_AZIONI_OUT ADD CONSTRAINT WKFCFGSTEAZIOUT_WKFDIZAZI_FK FOREIGN KEY (ID_AZIONE_OUT) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_DIZ_ATTORI ADD CONSTRAINT WKFDIZATT_WKFDIZTIPOGG_FK FOREIGN KEY (TIPO_OGGETTO) REFERENCES WKF_DIZ_TIPI_OGGETTO (CODICE) ENABLE VALIDATE
/
ALTER TABLE WKF_DIZ_ATTORI ADD CONSTRAINT WKFDIZATT_WKFDIZAZI_FK FOREIGN KEY (ID_AZIONE_CALCOLO) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_DIZ_AZIONI ADD CONSTRAINT WKFDIZAZI_WKFDIZTIPOGG_FK FOREIGN KEY (TIPO_OGGETTO) REFERENCES WKF_DIZ_TIPI_OGGETTO (CODICE) ENABLE VALIDATE
/
ALTER TABLE WKF_DIZ_AZIONI_PARAMETRI ADD CONSTRAINT WKFDIZAZIPAR_WKFDIZAZI_FK FOREIGN KEY (ID_AZIONE) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_DIZ_PULSANTI ADD CONSTRAINT WKFDIZPUL_WKFDIZTIPOGG_FK FOREIGN KEY (TIPO_OGGETTO) REFERENCES WKF_DIZ_TIPI_OGGETTO (CODICE) ENABLE VALIDATE
/
ALTER TABLE WKF_DIZ_PULSANTI ADD CONSTRAINT WKFDIZPUL_WKFDIZAZI_FK FOREIGN KEY (ID_CONDIZIONE_VISIBILITA) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_DIZ_PULSANTI_AZIONI ADD CONSTRAINT WKFDIZPULAZI_WKFDIZAZI_FK FOREIGN KEY (ID_AZIONE) REFERENCES WKF_DIZ_AZIONI (ID_AZIONE) ENABLE VALIDATE
/
ALTER TABLE WKF_ENGINE_ITER ADD CONSTRAINT WKFENGITE_WKFCFGITE_FK FOREIGN KEY (ID_CFG_ITER) REFERENCES WKF_CFG_ITER (ID_CFG_ITER) ENABLE VALIDATE
/
ALTER TABLE WKF_ENGINE_ITER ADD CONSTRAINT WKFENGITE_WKFENGSTE_FK FOREIGN KEY (ID_STEP_CORRENTE) REFERENCES WKF_ENGINE_STEP (ID_ENGINE_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_ENGINE_STEP ADD CONSTRAINT WKFENGSTE_WKFCFGSTE_FK FOREIGN KEY (ID_CFG_STEP) REFERENCES WKF_CFG_STEP (ID_CFG_STEP) ENABLE VALIDATE
/
ALTER TABLE WKF_ENGINE_STEP ADD CONSTRAINT WKFENGSTE_WKFENGITE_FK FOREIGN KEY (ID_ENGINE_ITER) REFERENCES WKF_ENGINE_ITER (ID_ENGINE_ITER) ENABLE VALIDATE
/
ALTER TABLE WKF_ENGINE_STEP_ATTORI ADD CONSTRAINT WKFENGSTEATT_WKFENGSTE_FK FOREIGN KEY (ID_ENGINE_STEP) REFERENCES WKF_ENGINE_STEP (ID_ENGINE_STEP) ENABLE VALIDATE
/

-- creo gli indici per ogni foreign-key
begin 
for c in ( 
select fk.owner             fk_owner
     , fk.constraint_name   fk_constraint_name
     , fk.table_name        fk_table_name
     , c.column_name        fk_column_name
     , fk.r_owner           ref_owner
     , ref.table_name       ref_table_name
     , c_ref.column_name    ref_column_name
  from user_cons_columns c
     , user_cons_columns c_ref
     , user_constraints fk
     , user_constraints ref
 where c.owner = fk.owner
   and c.constraint_name        = fk.constraint_name
   and fk.constraint_type       = 'R'
   and ref.constraint_name      = fk.r_constraint_name
   and ref.owner                = fk.owner
   and c_ref.constraint_name    = ref.constraint_name
   and c_ref.owner              = ref.owner)
    loop
        begin
            execute immediate 'CREATE INDEX '||c.fk_constraint_name||' ON '||c.fk_table_name||' ('||c.fk_column_name||') LOGGING NOPARALLEL';
        exception when others then
            null;
        end;
    end loop;
end;
/

-- creo la funzione per concatenare le stringhe con ', ' nelle group by
CREATE OR REPLACE TYPE t_string_agg AS OBJECT
(
  g_string  VARCHAR2(32767),

  STATIC FUNCTION ODCIAggregateInitialize(sctx  IN OUT  t_string_agg)
    RETURN NUMBER,

  MEMBER FUNCTION ODCIAggregateIterate(self   IN OUT  t_string_agg,
                                       value  IN      VARCHAR2 )
     RETURN NUMBER,

  MEMBER FUNCTION ODCIAggregateTerminate(self         IN   t_string_agg,
                                         returnValue  OUT  VARCHAR2,
                                         flags        IN   NUMBER)
    RETURN NUMBER,

  MEMBER FUNCTION ODCIAggregateMerge(self  IN OUT  t_string_agg,
                                     ctx2  IN      t_string_agg)
    RETURN NUMBER
);
/

CREATE OR REPLACE TYPE BODY t_string_agg IS
  STATIC FUNCTION ODCIAggregateInitialize(sctx  IN OUT  t_string_agg)
    RETURN NUMBER IS
  BEGIN
    sctx := t_string_agg(NULL);
    RETURN ODCIConst.Success;
  END;

  MEMBER FUNCTION ODCIAggregateIterate(self   IN OUT  t_string_agg,
                                       value  IN      VARCHAR2 )
    RETURN NUMBER IS
  BEGIN
    SELF.g_string := self.g_string || ', ' || value;
    RETURN ODCIConst.Success;
  END;

  MEMBER FUNCTION ODCIAggregateTerminate(self         IN   t_string_agg,
                                         returnValue  OUT  VARCHAR2,
                                         flags        IN   NUMBER)
    RETURN NUMBER IS
  BEGIN
    returnValue := RTRIM(LTRIM(SELF.g_string, ', '), ', ');
    RETURN ODCIConst.Success;
  END;

  MEMBER FUNCTION ODCIAggregateMerge(self  IN OUT  t_string_agg,
                                     ctx2  IN      t_string_agg)
    RETURN NUMBER IS
  BEGIN
    SELF.g_string := SELF.g_string || ', ' || ctx2.g_string;
    RETURN ODCIConst.Success;
  END;
END;
/

CREATE OR REPLACE FUNCTION string_agg (p_input VARCHAR2)
RETURN VARCHAR2
PARALLEL_ENABLE AGGREGATE USING t_string_agg;
/

begin execute immediate 'drop package reporter_pkg'; exception when others then null; end;
/

begin execute immediate 'drop view V_QRTZ_TRIGGERS'; exception when others then null; end;
/

begin execute immediate 'drop view RICERCA_VISTO_TESTO'; exception when others then null; end;
/

begin execute immediate 'drop view RICERCA_PARERE_TESTO'; exception when others then null; end;
/

begin execute immediate 'drop view RICERCA_DETERMINA_TESTO'; exception when others then null; end;
/

begin execute immediate 'drop view RICERCA_DELIBERA_TESTO'; exception when others then null; end;
/

begin execute immediate 'drop view RICERCA_CERTIFICATO_TESTO'; exception when others then null; end;
/

begin execute immediate 'create index dete_cf_ik on determine(anno_determina,numero_determina)'; exception when others then null; end;
/

begin execute immediate 'create index deli_cf_ik on delibere(anno_delibera,numero_delibera)'; exception when others then null; end;
/

begin execute immediate 'create index tire_cf_ik on tipi_registro(registro_esterno)'; exception when others then null; end;
/

begin execute immediate 'create index prop_deli_cf_ik on proposte_delibera(anno_proposta, numero_proposta)'; exception when others then null; end;
/

begin execute immediate 'CREATE UNIQUE INDEX DELIBERE_NUMERO_DELI_UK ON DELIBERE (ANNO_DELIBERA, NVL2("NUMERO_DELIBERA","ENTE",NULL), NUMERO_DELIBERA, REGISTRO_DELIBERA)'; exception when others then null; end;
/

begin execute immediate 'CREATE UNIQUE INDEX DETERMINE_NUMERO_DETE_UK ON DETERMINE (ANNO_DETERMINA, NVL2("NUMERO_DETERMINA","ENTE",NULL), NUMERO_DETERMINA, REGISTRO_DETERMINA)'; exception when others then null; end;
/

begin execute immediate 'CREATE UNIQUE INDEX DETERMINE_NUMERO_PROP_UK ON DETERMINE (ANNO_PROPOSTA, NVL2("NUMERO _PROPOSTA","ENTE",NULL), NUMERO_PROPOSTA, REGISTRO_PROPOSTA)'; exception when others then null; end;
/
